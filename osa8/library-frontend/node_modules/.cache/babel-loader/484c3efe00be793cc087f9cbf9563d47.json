{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client';\nimport { CURRENT_USER, ALL_BOOKS } from '../gql/queries';\nimport { LOGIN } from '../gql/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = props => {\n  _s();\n\n  const [queryUser, result] = useLazyQuery(CURRENT_USER, {\n    fetchPolicy: \"no-cache\",\n    onError: e => {\n      console.log(e.message);\n    }\n  });\n  const [queryBooks, bookResult] = useLazyQuery(ALL_BOOKS, {\n    fetchPolicy: \"no-cache\",\n    onError: e => {\n      console.log(e.message);\n    }\n  });\n  const [favoriteGenre, setFavoriteGenre] = useState(null);\n  useEffect(() => {\n    if (result.data && result.data.me) {\n      setFavoriteGenre(result.data.me.favoriteGenre);\n      queryBooks({\n        variables: {\n          genre: `${favoriteGenre}`\n        }\n      });\n    } else {\n      queryUser();\n    }\n  }, [result, favoriteGenre]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (!favoriteGenre) {\n    return null;\n  }\n\n  const recommendedBooks = bookResult.data.allbooks;\n  console.log(recommendedBooks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"books in your favorite genre \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: favoriteGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), recommendedBooks.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, b.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommendations, \"ykDLBqIyENSyA3s3TDzs8xwWlck=\", false, function () {\n  return [useLazyQuery, useLazyQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js"],"names":["React","useState","useEffect","useHistory","useQuery","useMutation","useLazyQuery","CURRENT_USER","ALL_BOOKS","LOGIN","Recommendations","props","queryUser","result","fetchPolicy","onError","e","console","log","message","queryBooks","bookResult","favoriteGenre","setFavoriteGenre","data","me","variables","genre","show","recommendedBooks","allbooks","map","b","title","author","name","published"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { CURRENT_USER, ALL_BOOKS } from '../gql/queries'\nimport { LOGIN } from '../gql/mutations'\n\nconst Recommendations = (props) => {\n    const [queryUser, result] = useLazyQuery(CURRENT_USER, {\n        fetchPolicy: \"no-cache\",\n        onError: (e) => {\n            console.log(e.message)\n        }\n    })\n\n    const [queryBooks, bookResult] = useLazyQuery(ALL_BOOKS, {\n        fetchPolicy: \"no-cache\",\n        onError: (e) => {\n            console.log(e.message)\n        }\n    })\n\n    const [favoriteGenre, setFavoriteGenre] = useState(null)\n\n    useEffect(() => {\n        if (result.data && result.data.me) {\n            setFavoriteGenre(result.data.me.favoriteGenre)\n            queryBooks({ variables: { genre: `${favoriteGenre}` } })\n        } else {\n            queryUser()\n        }\n    }, [result, favoriteGenre])\n\n\n    if (!props.show) {\n        return null\n    }\n\n    if (!favoriteGenre) {\n        return null\n    }\n\n    const recommendedBooks = bookResult.data.allbooks\n\n    console.log(recommendedBooks)\n    \n    return(\n        <div>\n            <h2>Recommendations</h2>\n            <p>books in your favorite genre <b>{favoriteGenre}</b></p>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>\n                        </th>\n                        <th>author</th>\n                        <th>published</th>\n                    </tr>\n                    {recommendedBooks.map(b => \n                        <tr key = {b.title}>\n                            <td>{b.title}</td>\n                            <td>{b.author.name}</td>\n                            <td>{b.published}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Recommendations"]},"metadata":{},"sourceType":"module"}
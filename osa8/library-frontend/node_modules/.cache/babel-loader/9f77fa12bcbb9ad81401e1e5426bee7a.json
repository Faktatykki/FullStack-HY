{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Books.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = props => {\n  _s();\n\n  const [genreFilter, setGenreFilter] = useState('all');\n  const [booksByGenre, setBooksByGenre] = useState(props.books.allBooks);\n\n  if (!props.show) {\n    return null;\n  }\n\n  let genres = props.genres.allBooks;\n  const merged = [];\n  genres.map(g => merged.push(g.genres));\n  genres = merged.flat(1).filter((v, i, s) => {\n    return s.indexOf(v) === i;\n  });\n  console.log(genreFilter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"in genre \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: genreFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), booksByGenre.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, a.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), genres.map(g => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGenreFilter({\n        g\n      }),\n      children: g\n    }, g, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Books, \"GbwzU7mXPEboyxuYdadjIpMB+Vc=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Books.js"],"names":["React","useState","Books","props","genreFilter","setGenreFilter","booksByGenre","setBooksByGenre","books","allBooks","show","genres","merged","map","g","push","flat","filter","v","i","s","indexOf","console","log","a","title","author","name","published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACE,KAAK,CAACK,KAAN,CAAYC,QAAb,CAAhD;;AAEA,MAAI,CAACN,KAAK,CAACO,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAIC,MAAM,GAAGR,KAAK,CAACQ,MAAN,CAAaF,QAA1B;AAEA,QAAMG,MAAM,GAAG,EAAf;AAEAD,EAAAA,MAAM,CAACE,GAAP,CAAWC,CAAC,IAAIF,MAAM,CAACG,IAAP,CAAYD,CAAC,CAACH,MAAd,CAAhB;AACAA,EAAAA,MAAM,GAAGC,MAAM,CAACI,IAAP,CAAY,CAAZ,EAAeC,MAAf,CAAsB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AAC1C,WAAOA,CAAC,CAACC,OAAF,CAAUH,CAAV,MAAiBC,CAAxB;AACD,GAFQ,CAAT;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2CAAY;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGE,YAAY,CAACO,GAAb,CAAiBW,CAAC,iBACjB;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASJ,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,EAuBGd,MAAM,CAACE,GAAP,CAAWC,CAAC,iBACT;AAAkB,MAAA,OAAO,EAAG,MAAMT,cAAc,CAAC;AAACS,QAAAA;AAAD,OAAD,CAAhD;AAAA,gBAAwDA;AAAxD,OAAeA,CAAf;AAAA;AAAA;AAAA;AAAA,YADH,CAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAhDD;;GAAMZ,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\n\n\nconst Books = (props) => {\n  const [genreFilter, setGenreFilter] = useState('all')\n  const [booksByGenre, setBooksByGenre] = useState(props.books.allBooks)\n\n  if (!props.show) {\n    return null\n  }\n\n  let genres = props.genres.allBooks\n\n  const merged = []\n\n  genres.map(g => merged.push(g.genres))\n  genres = merged.flat(1).filter((v, i, s) => {\n    return s.indexOf(v) === i\n  })\n\n  console.log(genreFilter)\n\n  return (\n    <div>\n      <h2>books</h2>\n      <p>in genre <b>{genreFilter}</b></p>\n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {booksByGenre.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {genres.map(g => \n          <button key = {g} onClick ={() => setGenreFilter({g})}>{g}</button>\n        )}\n    </div>\n  )\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}
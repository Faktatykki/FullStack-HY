{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { LOGIN } from '../gql/mutations';\nimport { CURRENT_USER } from '../gql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  setToken\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useQuery(CURRENT_USER);\n  const [login, result] = useMutation(LOGIN, {\n    refetchQueries: [{\n      query: CURRENT_USER\n    }],\n    onError: e => {\n      console.log(e.message);\n    }\n  });\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value;\n      setToken(token);\n      localStorage.setItem('user-token', token);\n    }\n  }, [result.data]);\n\n  const submit = async event => {\n    event.preventDefault();\n    login({\n      variables: {\n        username,\n        password\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: ({\n            target\n          }) => setUsername(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: ({\n            target\n          }) => setPassword(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"ZPrtdDKHJSx3Q4smbyY2jJukmKo=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/LoginForm.js"],"names":["React","useState","useEffect","useMutation","useQuery","LOGIN","CURRENT_USER","LoginForm","setToken","username","setUsername","password","setPassword","user","login","result","refetchQueries","query","onError","e","console","log","message","data","token","value","localStorage","setItem","submit","event","preventDefault","variables","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMY,IAAI,GAAGT,QAAQ,CAACE,YAAD,CAArB;AAEA,QAAM,CAAEQ,KAAF,EAASC,MAAT,IAAoBZ,WAAW,CAACE,KAAD,EAAQ;AACzCW,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAAD,CADyB;AAEzCY,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AAJwC,GAAR,CAArC;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAKa,MAAM,CAACQ,IAAZ,EAAmB;AACf,YAAMC,KAAK,GAAGT,MAAM,CAACQ,IAAP,CAAYT,KAAZ,CAAkBW,KAAhC;AACAjB,MAAAA,QAAQ,CAACgB,KAAD,CAAR;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,KAAnC;AACH;AACJ,GANQ,EAMN,CAACT,MAAM,CAACQ,IAAR,CANM,CAAT;;AAQA,QAAMK,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAhB,IAAAA,KAAK,CAAC;AAAEiB,MAAAA,SAAS,EAAE;AAAEtB,QAAAA,QAAF;AAAYE,QAAAA;AAAZ;AAAb,KAAD,CAAL;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAIiB,MAAlB;AAAA,8BACI;AAAA,4CAEI;AACA,UAAA,KAAK,EAAInB,QADT;AAEA,UAAA,QAAQ,EAAI,CAAC;AAAEuB,YAAAA;AAAF,WAAD,KAAgBtB,WAAW,CAACsB,MAAM,CAACP,KAAR;AAFvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,4CAEI;AACA,UAAA,IAAI,EAAG,UADP;AAEA,UAAA,KAAK,EAAId,QAFT;AAGA,UAAA,QAAQ,EAAI,CAAC;AAAEqB,YAAAA;AAAF,WAAD,KAAgBpB,WAAW,CAACoB,MAAM,CAACP,KAAR;AAHvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAgBI;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAjDD;;GAAMlB,S;UAIWH,Q,EAEaD,W;;;KANxBI,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React , { useState, useEffect } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { LOGIN } from '../gql/mutations'\nimport { CURRENT_USER } from '../gql/queries'\n\n\nconst LoginForm = ({ setToken }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const user = useQuery(CURRENT_USER)\n\n    const [ login, result ] = useMutation(LOGIN, {\n        refetchQueries: [{ query: CURRENT_USER }],\n        onError: (e) => {\n            console.log(e.message)\n        }\n    })\n\n    useEffect(() => {\n        if ( result.data ) {\n            const token = result.data.login.value\n            setToken(token)\n            localStorage.setItem('user-token', token)\n        }\n    }, [result.data])\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n        login({ variables: { username, password }})\n    }\n\n    return(\n        <div>\n            <form onSubmit = {submit}>\n                <div>\n                    username \n                    <input\n                    value = {username}\n                    onChange = {({ target }) => setUsername(target.value)}\n                    />\n                </div>\n                <div>\n                    password\n                    <input\n                    type = 'password'\n                    value = {password}\n                    onChange = {({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <button type = 'submit'>login</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}
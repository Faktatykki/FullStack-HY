{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/SetBirthyear.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_AUTHOR } from '../gql/mutations';\nimport { ALL_AUTHORS } from '../gql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetBirthyear = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [born, setBorn] = useState('');\n  const [updateAuthor] = useMutation(UPDATE_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    onError: e => {\n      console.log(e);\n    }\n  });\n  console.log(props.authors.data);\n  const options = props.authors.map(a => {\n    return {\n      label: a.name,\n      value: a.name\n    };\n  });\n  const [selectedOption, setSelectedOption] = useState('');\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    updateAuthor({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName('');\n    setBorn('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Birthyear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: selectedOption,\n          onChange: setSelectedOption,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"born\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: born,\n          onChange: ({\n            target\n          }) => setBorn(parseInt(target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"update author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SetBirthyear, \"691I4qb/JnrZ2k2nLj/p8FaBMjc=\", false, function () {\n  return [useMutation];\n});\n\n_c = SetBirthyear;\nexport default SetBirthyear;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetBirthyear\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/SetBirthyear.js"],"names":["React","useState","Select","useMutation","UPDATE_AUTHOR","ALL_AUTHORS","SetBirthyear","props","name","setName","born","setBorn","updateAuthor","refetchQueries","query","onError","e","console","log","authors","data","options","map","a","label","value","selectedOption","setSelectedOption","show","submit","event","preventDefault","variables","target","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACW,YAAD,IAAiBT,WAAW,CAACC,aAAD,EAAgB;AAC9CS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAET;AAAT,KAAD,CAD8B;AAE9CU,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAJ6C,GAAhB,CAAlC;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,OAAN,CAAcC,IAA1B;AAEA,QAAMC,OAAO,GAAGd,KAAK,CAACY,OAAN,CAAcG,GAAd,CAAkBC,CAAC,IAAI;AACnC,WAAO;AACHC,MAAAA,KAAK,EAAED,CAAC,CAACf,IADN;AAEHiB,MAAAA,KAAK,EAAEF,CAAC,CAACf;AAFN,KAAP;AAIH,GALe,CAAhB;AAOA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,EAAD,CAApD;;AAEA,MAAI,CAACM,KAAK,CAACqB,IAAX,EAAiB;AACb,WAAO,IAAP;AACH;;AAED,QAAMC,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAnB,IAAAA,YAAY,CAAC;AAAEoB,MAAAA,SAAS,EAAE;AAAExB,QAAAA,IAAF;AAAQE,QAAAA;AAAR;AAAb,KAAD,CAAZ;AAEAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAPD;;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEkB,MAAhB;AAAA,8BACI;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,YAAY,EAAEH,cADlB;AAEI,UAAA,QAAQ,EAAEC,iBAFd;AAGI,UAAA,OAAO,EAAEN;AAHb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,wCAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,KAAK,EAAEX,IAFX;AAGI,UAAA,QAAQ,EAAE,CAAC;AAAEuB,YAAAA;AAAF,WAAD,KAAgBtB,OAAO,CAACuB,QAAQ,CAACD,MAAM,CAACR,KAAR,CAAT;AAHrC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA1DD;;GAAMnB,Y;UAIqBH,W;;;KAJrBG,Y;AA4DN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport Select from 'react-select'\n\nimport { useMutation } from '@apollo/client'\n\nimport { UPDATE_AUTHOR } from '../gql/mutations'\nimport { ALL_AUTHORS } from '../gql/queries'\n\nconst SetBirthyear = (props) => {\n    const [name, setName] = useState('')\n    const [born, setBorn] = useState('')\n\n    const [updateAuthor] = useMutation(UPDATE_AUTHOR, {\n        refetchQueries: [{ query: ALL_AUTHORS }],\n        onError: (e) => {\n            console.log(e)\n        }\n    })\n\n    console.log(props.authors.data)\n\n    const options = props.authors.map(a => {\n        return {\n            label: a.name,\n            value: a.name\n        }\n    })\n\n    const [selectedOption, setSelectedOption] = useState('')\n\n    if (!props.show) {\n        return null\n    }\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n        updateAuthor({ variables: { name, born } })\n\n        setName('')\n        setBorn('')\n    }\n\n    return (\n        <div>\n            <h2>Set Birthyear</h2>\n            <form onSubmit={submit}>\n                <div>\n                    <Select\n                        defaultValue={selectedOption}\n                        onChange={setSelectedOption}\n                        options={options}\n                    />\n                </div>\n                <div>\n                    born\n                    <input\n                        type='number'\n                        value={born}\n                        onChange={({ target }) => setBorn(parseInt(target.value))}\n                    />\n                </div>\n                <button type='submit'>update author</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SetBirthyear"]},"metadata":{},"sourceType":"module"}
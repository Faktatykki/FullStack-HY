{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, gql } from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authLink = setContext((__, {\n  headers\n}) => {\n  const token = localStorage.getItem('user-token');\n  return {\n    headers: { ...headers,\n      authorization: token ? `bearer ${token}` : null\n    }\n  };\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'http://localhost:4000'\n  })\n});\nconst query = gql`\n    query {\n        allAuthors {\n            name\n        }\n    }\n`;\nclient.query({\n  query\n}).then(res => {}); //client saadaan sovelluksen kaikkien komponenttien saataville käärimällä App providerin lapseksi\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/index.js"],"names":["React","ReactDOM","App","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","gql","setContext","authLink","__","headers","token","localStorage","getItem","authorization","client","cache","link","uri","query","then","res","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,QAAvC,EAAiDC,aAAjD,EAAgEC,GAAhE,QAA2E,gBAA3E;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAQ,GAAGD,UAAU,CAAC,CAACE,EAAD,EAAK;AAAEC,EAAAA;AAAF,CAAL,KAAqB;AAC7C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AACA,SAAO;AACHH,IAAAA,OAAO,EAAE,EACL,GAAGA,OADE;AAELI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFtC;AADN,GAAP;AAMH,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC5Bc,EAAAA,KAAK,EAAE,IAAIX,aAAJ,EADqB;AAE5BY,EAAAA,IAAI,EAAE,IAAIb,QAAJ,CAAa;AACfc,IAAAA,GAAG,EAAE;AADU,GAAb;AAFsB,CAAjB,CAAf;AAOA,MAAMC,KAAK,GAAGb,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,CANA;AAOAS,MAAM,CAACI,KAAP,CAAa;AAAEA,EAAAA;AAAF,CAAb,EACKC,IADL,CACUC,GAAG,IAAI,CAEhB,CAHD,E,CAKA;;AACArB,QAAQ,CAACsB,MAAT,eAAgB,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAIP,MAA1B;AAAA,yBACR,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,QAAhB,EAGIQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHJ","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, gql } from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\n\nconst authLink = setContext((__, { headers }) => {\n    const token = localStorage.getItem('user-token')\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `bearer ${token}` : null\n        }\n    }\n})\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n        uri: 'http://localhost:4000',\n    })\n})\n\nconst query = gql`\n    query {\n        allAuthors {\n            name\n        }\n    }\n`\nclient.query({ query })\n    .then(res => {\n        \n})\n\n//client saadaan sovelluksen kaikkien komponenttien saataville käärimällä App providerin lapseksi\nReactDOM.render(<ApolloProvider client = {client}>\n        <App />\n    </ApolloProvider>, \n    document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}
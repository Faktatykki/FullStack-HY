{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { CURRENT_USER } from '../gql/queries';\nimport { LOGIN } from '../gql/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = props => {\n  _s();\n\n  const user = useQuery(CURRENT_USER);\n  const [books, setBooks] = useState(props.books.allBooks);\n  console.log(user.data);\n  useEffect(() => {\n    window.location.reload(true);\n  }, []);\n\n  if (!props.show) {\n    return null;\n  }\n\n  const recommendedBooks = props.books.allBooks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"books in your favorite genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), recommendedBooks.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, b.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommendations, \"Qhec94wNNTyV5XebaAosr+8Od2Q=\", false, function () {\n  return [useQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js"],"names":["React","useState","useEffect","useQuery","useMutation","CURRENT_USER","LOGIN","Recommendations","props","user","books","setBooks","allBooks","console","log","data","window","location","reload","show","recommendedBooks","map","b","title","author","name","published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,IAAI,GAAGN,QAAQ,CAACE,YAAD,CAArB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACO,KAAK,CAACE,KAAN,CAAYE,QAAb,CAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,IAAjB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACV,KAAK,CAACW,IAAX,EAAiB;AACb,WAAO,IAAP;AACH;;AAED,QAAMC,gBAAgB,GAAGZ,KAAK,CAACE,KAAN,CAAYE,QAArC;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,6BACI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOKQ,gBAAgB,CAACC,GAAjB,CAAqBC,CAAC,iBACnB;AAAA,kCACI;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAWJ,CAAC,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA,gBADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxCD;;GAAMhB,e;UACWJ,Q;;;KADXI,e;AA0CN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { useQuery, useMutation } from '@apollo/client'\nimport { CURRENT_USER } from '../gql/queries'\nimport { LOGIN } from '../gql/mutations'\n\nconst Recommendations = (props) => {\n    const user = useQuery(CURRENT_USER)\n    const [books, setBooks] = useState(props.books.allBooks)\n\n    console.log(user.data)\n\n    useEffect(() => {\n        window.location.reload(true)\n    }, [])\n\n    if (!props.show) {\n        return null\n    }\n\n    const recommendedBooks = props.books.allBooks\n    \n\n    return(\n        <div>\n            <h2>Recommendations</h2>\n            <p>books in your favorite genre</p>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>\n                        </th>\n                        <th>author</th>\n                        <th>published</th>\n                    </tr>\n                    {recommendedBooks.map(b => \n                        <tr key = {b.title}>\n                            <td>{b.title}</td>\n                            <td>{b.author.name}</td>\n                            <td>{b.published}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Recommendations"]},"metadata":{},"sourceType":"module"}
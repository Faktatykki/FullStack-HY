{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport LoginForm from './components/LoginForm';\nimport Recommendations from './components/Recommendations';\nimport { useApolloClient, useQuery } from '@apollo/client';\nimport { ALL_AUTHORS, ALL_BOOKS, ALL_GENRES, CURRENT_USER } from './gql/queries';\nimport SetBirthyear from './components/SetBirthyear'; //TARKISTUS\n//8.20\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [page, setPage] = useState('authors');\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const client = useApolloClient();\n  useEffect(() => {\n    setToken(localStorage.getItem('user-token'));\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await client.query({\n        query: CURRENT_USER\n      });\n      setUser(data.me);\n    })();\n  });\n  const authors = useQuery(ALL_AUTHORS);\n  const books = useQuery(ALL_BOOKS);\n  const genres = useQuery(ALL_GENRES);\n\n  if (books.loading || authors.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        setToken: setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('authors'),\n        children: \"authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('books'),\n        children: \"books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('add'),\n        children: \"add book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('update'),\n        children: \"update author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage('recommend'),\n        children: \"recommend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Authors, {\n      show: page === 'authors',\n      authors: authors.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Books, {\n      show: page === 'books',\n      books: books.data,\n      genres: genres.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewBook, {\n      show: page === 'add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SetBirthyear, {\n      show: page === 'update',\n      authors: authors.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Recommendations, {\n      show: page === 'recommend',\n      books: books.data,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R4Whfud2k4K3aJjzJTbDLb60WcI=\", false, function () {\n  return [useApolloClient, useQuery, useQuery, useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/App.js"],"names":["React","useEffect","useState","Authors","Books","NewBook","LoginForm","Recommendations","useApolloClient","useQuery","ALL_AUTHORS","ALL_BOOKS","ALL_GENRES","CURRENT_USER","SetBirthyear","App","page","setPage","token","setToken","user","setUser","client","localStorage","getItem","data","query","me","authors","books","genres","loading","logout","clear","resetStore"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport NewBook from './components/NewBook'\nimport LoginForm from './components/LoginForm'\nimport Recommendations from './components/Recommendations'\n\nimport { useApolloClient, useQuery } from '@apollo/client'\nimport { ALL_AUTHORS, ALL_BOOKS, ALL_GENRES, CURRENT_USER } from './gql/queries'\n\nimport SetBirthyear from './components/SetBirthyear'\n\n//TARKISTUS\n//8.20\n\nconst App = () => {\n  const [page, setPage] = useState('authors')\n  const [token, setToken] = useState(null)\n  const [user, setUser] = useState(null)\n  const client = useApolloClient()\n\n  useEffect(() => {\n    setToken(localStorage.getItem('user-token'))\n  }, [])\n\n  useEffect(() => {\n   (async () => {\n      const { data } = await client.query({ query: CURRENT_USER })\n      setUser( data.me )\n    })()\n  })\n\n  const authors = useQuery(ALL_AUTHORS)\n  const books = useQuery(ALL_BOOKS)\n  const genres = useQuery(ALL_GENRES)\n\n  if (books.loading || authors.loading) {\n    return <div>loading...</div>\n  }\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  if (!token) {\n    return (\n      <div>\n        <h2>Login</h2>\n        <LoginForm\n          setToken = {setToken}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setPage('authors')}>authors</button>\n        <button onClick={() => setPage('books')}>books</button>\n        <button onClick={() => setPage('add')}>add book</button>\n        <button onClick={() => setPage('update')}>update author</button>\n        <button onClick={() => setPage('recommend')}>recommend</button>\n        <button onClick = {logout}>logout</button>\n      </div>\n        <Authors\n          show = {page === 'authors'} authors = {authors.data}\n        />\n\n        <Books\n          show = {page === 'books'} books = {books.data} genres = {genres.data}\n        />\n\n        <NewBook\n          show = {page === 'add'}\n        />\n\n        <SetBirthyear\n          show = {page === 'update'} authors = {authors.data}\n        />\n\n        <Recommendations\n          show = {page === 'recommend'} books = {books.data} user = {user}\n        />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
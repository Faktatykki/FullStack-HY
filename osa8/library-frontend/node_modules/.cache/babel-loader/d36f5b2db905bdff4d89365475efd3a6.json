{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/SetBirthyear.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_AUTHOR } from '../gql/mutations';\nimport { ALL_AUTHORS } from '../gql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetBirthyear = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [born, setBorn] = useState('');\n  const [updateAuthor] = useMutation(UPDATE_AUTHOR, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }],\n    onError: e => {\n      console.log(e);\n    }\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  console.log(name);\n  console.log(born);\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log(name);\n    console.log(born);\n    updateAuthor({\n      variables: {\n        name,\n        born\n      }\n    });\n    setName('');\n    setBorn('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Birthyear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: ({\n            target\n          }) => setName(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"born\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: born,\n          onChange: ({\n            target\n          }) => setBorn(parseInt(target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"update author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SetBirthyear, \"D16P8gxMl79KvJvnRKmneej7luE=\", false, function () {\n  return [useMutation];\n});\n\n_c = SetBirthyear;\nexport default SetBirthyear;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetBirthyear\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/SetBirthyear.js"],"names":["React","useState","useMutation","UPDATE_AUTHOR","ALL_AUTHORS","SetBirthyear","props","name","setName","born","setBorn","updateAuthor","refetchQueries","query","onError","e","console","log","show","submit","event","preventDefault","variables","target","value","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAEU,YAAF,IAAmBT,WAAW,CAACC,aAAD,EAAgB;AAChDS,IAAAA,cAAc,EAAE,CAAE;AAACC,MAAAA,KAAK,EAAET;AAAR,KAAF,CADgC;AAEhDU,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAJ+C,GAAhB,CAApC;;AAOA,MAAI,CAACT,KAAK,CAACY,IAAX,EAAiB;AACb,WAAO,IAAP;AACH;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACIS,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AAEJ,QAAMU,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEAE,IAAAA,YAAY,CAAC;AAAEW,MAAAA,SAAS,EAAE;AAAEf,QAAAA,IAAF;AAAQE,QAAAA;AAAR;AAAb,KAAD,CAAZ;AAEAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAIS,MAAlB;AAAA,8BACI;AAAA,wCAEI;AACI,UAAA,KAAK,EAAIZ,IADb;AAEI,UAAA,QAAQ,EAAI,CAAC;AAAEgB,YAAAA;AAAF,WAAD,KAAgBf,OAAO,CAACe,MAAM,CAACC,KAAR;AAFvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,wCAEI;AACI,UAAA,IAAI,EAAG,QADX;AAEI,UAAA,KAAK,EAAIf,IAFb;AAGI,UAAA,QAAQ,EAAI,CAAC;AAAEc,YAAAA;AAAF,WAAD,KAAgBb,OAAO,CAACe,QAAQ,CAACF,MAAM,CAACC,KAAR,CAAT;AAHvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAgBI;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CArDD;;GAAMnB,Y;UAIuBH,W;;;KAJvBG,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\n\nimport { UPDATE_AUTHOR } from '../gql/mutations'\nimport { ALL_AUTHORS } from '../gql/queries'\n\nconst SetBirthyear = (props) => {\n    const [name, setName] = useState('')\n    const [born, setBorn] = useState('')\n\n    const [ updateAuthor ] = useMutation(UPDATE_AUTHOR, {\n        refetchQueries: [ {query: ALL_AUTHORS} ],\n        onError: (e) => {\n            console.log(e)\n        }\n    })\n\n    if (!props.show) {\n        return null\n    }\n\n    console.log(name)\n        console.log(born)\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n        console.log(name)\n        console.log(born)\n\n        updateAuthor({ variables: { name, born } } )\n\n        setName('')\n        setBorn('')\n    }\n\n    return(\n        <div>\n            <h2>Set Birthyear</h2>\n            <form onSubmit = {submit}>\n                <div>\n                    name\n                    <input \n                        value = {name}\n                        onChange = {({ target }) => setName(target.value)}\n                    />\n                </div>\n                <div>\n                    born\n                    <input\n                        type = 'number'\n                        value = {born}\n                        onChange = {({ target }) => setBorn(parseInt(target.value))}\n                    />\n                </div>\n                <button type = 'submit'>update author</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SetBirthyear"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client';\nimport { CURRENT_USER } from '../gql/queries';\nimport { LOGIN } from '../gql/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = props => {\n  _s();\n\n  if (!result.data) {\n    console.log('haloo vittu');\n    queryUser();\n  }\n\n  const [queryUser, result] = useLazyQuery(CURRENT_USER, {\n    fetchPolicy: 'no-cache',\n    onError: e => {\n      console.log(e.message);\n    }\n  });\n  useEffect(() => {\n    queryUser();\n  }, []);\n\n  if (!props.show) {\n    return null;\n  }\n\n  console.log(result.data.me.favoriteGenre);\n  const recommendedBooks = props.books.allBooks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"books in your favorite genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"published\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), recommendedBooks.map(b => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.author.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b.published\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, b.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recommendations, \"BgftASb1meZvpX1WZMPS9+Cdvps=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["/home/samkaari/Documents/FullStack/newFullStack-HY/FullStack-HY/osa8/library-frontend/src/components/Recommendations.js"],"names":["React","useState","useEffect","useQuery","useMutation","useLazyQuery","CURRENT_USER","LOGIN","Recommendations","props","result","data","console","log","queryUser","fetchPolicy","onError","e","message","show","me","favoriteGenre","recommendedBooks","books","allBooks","map","b","title","author","name","published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,YAAhC,QAAoD,gBAApD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B,MAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,IAAAA,SAAS;AACZ;;AAED,QAAM,CAAEA,SAAF,EAAaJ,MAAb,IAAwBL,YAAY,CAACC,YAAD,EAAe;AACrDS,IAAAA,WAAW,EAAE,UADwC;AAErDC,IAAAA,OAAO,EAAGC,CAAD,IAAO;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,OAAd;AACH;AAJoD,GAAf,CAA1C;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACL,KAAK,CAACU,IAAX,EAAiB;AACb,WAAO,IAAP;AACH;;AAGDP,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAP,CAAYS,EAAZ,CAAeC,aAA3B;AAGA,QAAMC,gBAAgB,GAAGb,KAAK,CAACc,KAAN,CAAYC,QAArC;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,6BACI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOKF,gBAAgB,CAACG,GAAjB,CAAqBC,CAAC,iBACnB;AAAA,kCACI;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKD,CAAC,CAACE,MAAF,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKH,CAAC,CAACI;AAAP;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAWJ,CAAC,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA,gBADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CApDD;;GAAMnB,e;UAO4BH,Y;;;KAP5BG,e;AAsDN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { useQuery, useMutation, useLazyQuery } from '@apollo/client'\nimport { CURRENT_USER } from '../gql/queries'\nimport { LOGIN } from '../gql/mutations'\n\nconst Recommendations = (props) => {\n    \n    if (!result.data) {\n        console.log('haloo vittu')\n        queryUser()\n    }\n\n    const [ queryUser, result ] = useLazyQuery(CURRENT_USER, {\n        fetchPolicy: 'no-cache',\n        onError: (e) => {\n            console.log(e.message)\n        }\n    })\n\n    useEffect(() => {\n        queryUser()\n    }, [])\n\n    if (!props.show) {\n        return null\n    }\n\n    \n    console.log(result.data.me.favoriteGenre)\n    \n\n    const recommendedBooks = props.books.allBooks\n    \n\n    return(\n        <div>\n            <h2>Recommendations</h2>\n            <p>books in your favorite genre</p>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>\n                        </th>\n                        <th>author</th>\n                        <th>published</th>\n                    </tr>\n                    {recommendedBooks.map(b => \n                        <tr key = {b.title}>\n                            <td>{b.title}</td>\n                            <td>{b.author.name}</td>\n                            <td>{b.published}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Recommendations"]},"metadata":{},"sourceType":"module"}